@import "_variables.scss";

.container-circle {
    color: $black-blue;
    position: relative;
    height: 80%;

    .circle {
        width: $diameter-circle;
        height: $diameter-circle;
        border: 1px solid rgb($black-blue, $defoult-opacity-vector);
        border-radius: 50%;
        position: absolute;
        top: 55%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 2;
    }

    .point {
        width: $diameter-point;
        height: $diameter-point;
        border-radius: 50%;
        background-color: $black-blue;
        position: absolute;
        top: 50%;
        left: 50%;
        text-align: center;
        cursor: pointer;
        transition: transform 1s;
    }

    .point > p {
        font-weight: 400;
        display: none;
        transform: translateY(45%) scale(calc(1.2));
    }

    .point:hover > p {
        display: inline-block;      
    }

    .point > p.topic {
        transition: opacity 0.2s linear, visibility 1s linear;
        display: inline-block; 
        position: absolute;
        white-space: nowrap;
        font-weight: 700;
        width: auto;
        height: auto;
        left: calc($diameter-point * $increase-for-current * 1.5);
        opacity: 0;
    }

    @for $i from 0 through $numPoint {
        #point#{$i + 1} {
            & {
                transform: translate(-50%, -50%) rotate(calc($arcAngle * $i - $shift)) translate(calc($diameter-circle / 2)) rotate(- calc($arcAngle * $i - $shift));
                transition: transform 0.5s, width 0.5s, height 0.5s, border-radius 0.5s, background-color 0.5s;
                border: 1px solid $gray;
            }
            &:hover {
                background-color: white;
                width: calc($diameter-point * $increase-for-current);
                height: calc($diameter-point * $increase-for-current);
            }
        }
    }

    #current {
        transform: translate(-50%, -50%) rotate(- $shift) translate(calc($diameter-circle / 2)) rotate($shift);
        transition: transform 0.5s;
        width: calc($diameter-point * $increase-for-current);
        height: calc($diameter-point * $increase-for-current);
        background-color: white;
        border: 1px solid $gray;
        pointer-events: none;

        p {
            display: inline-block;
            font-weight: 400;
            transform: translateY(130%) scale(1.2);
            width: auto;
            height: auto;
        }

        p.topic, p#current-topic {
            position: absolute;
            white-space: nowrap;
            font-weight: 700;
            width: auto;
            height: auto;
            left: calc($diameter-point * $increase-for-current * 1.5);
            transition: opacity 1s linear, visibility 1s linear;
        }

        p#current-topic {
            opacity: 1;
        }
    }

    .container-years {
        display: flex;
        flex-direction: row;
        width: auto;
        height: auto;
        position: absolute;
        z-index: 1;
        box-sizing:content-box;
        font-size: $font-size-years;
        font-weight: 700;
        transition: transform 0.5s;
        user-select: none;
        top: 55%;
        left: 50%;
        transform: translate(-50%, -50%);

        .first-year {
            display: inline-block;
            height: auto;
            width: auto;
            color: $iris;
            transform: translate(-5%);
        }

        .second-year {
            display: inline-block;
            height: auto;
            width: auto;
            color: $pink;
            transform: translate(5%);
        }
    }

    p.current-point {
        display: inline-block;
        transform: scale(1.2);
        width: auto;
        height: auto;
        margin-left: calc($vector-header-width + 6.2%);
        position: absolute;
        top: 81%;
    }

    .container-button {
        display: flex;
        flex-direction: row;
        height: auto;
        width: auto;
        margin-left: calc($vector-header-width + 6%) ;
        position: absolute;
        top: 86%;

        .arrow {
            position: relative;
            width: $diameter-point * $increase-for-current;
            height: $diameter-point * $increase-for-current;
            border: 1px solid rgb($black-blue, 0.5);
            border-radius: 50%;
            cursor: pointer;
            &:hover {
                background-color: white;
            }
        }
    
        .arrow-left {
            &::after {
                position: absolute;
                top: 8px;;
                left: 9px;
                content: '';
                display: block;
                width: 7px;
                height: 7px;
                border-left: 2px solid $black-blue;
                border-bottom: 2px solid $black-blue;
                transform: translate(180%, 180%) rotate(45deg);
            }
        }
    
        .arrow-right{
            transform: translateX(45%);
            &::after {
                position: absolute;
                top: 8px;;
                left: 9px;
                content: '';
                display: block;
                width: 7px;
                height: 7px;
                border-left: 2px solid $black-blue;
                border-bottom: 2px solid $black-blue;
                transform: translate(150%, 180%) rotate(225deg);
            }
        }

        .btn-off {
            pointer-events: none;
            border: 1px solid rgb($black-blue, 0.25);
            &::after {
                border-left: 2px solid rgb($black-blue, 0.25);
                border-bottom: 2px solid rgb($black-blue, 0.25);
            }
        }
    }
    
    @media screen and (max-width: 1265px) {
        .circle {
            width: $diameter-circle-1265;
            height: $diameter-circle-1265;
        }

        .point {
            width: $diameter-point-1265;
            height: $diameter-point-1265;
        }
    
        @for $i from 0 through $numPoint {
            #point#{$i + 1} {
                & {
                    transform: translate(-50%, -50%) rotate(calc($arcAngle * $i - $shift)) translate(calc($diameter-circle-1265 / 2)) rotate(- calc($arcAngle * $i - $shift));
                }
                &:hover {
                    width: calc($diameter-point-1265 * $increase-for-current);
                    height: calc($diameter-point-1265 * $increase-for-current);
                }
            }
        }
    
        #current {
            transform: translate(-50%, -50%) rotate(- $shift) translate(calc($diameter-circle-1265 / 2)) rotate($shift);
            width: calc($diameter-point-1265 * $increase-for-current);
            height: calc($diameter-point-1265 * $increase-for-current);
        }

        .container-years {
            font-size: $font-size-years-1265;
        }
        .container-button {
            .arrow {
                width: $diameter-point-1265 * $increase-for-current;
                height: $diameter-point-1265 * $increase-for-current;
            }
        }
    }

    @media screen and (max-width: 980px) {
        .circle {
            width: $diameter-circle-980;
            height: $diameter-circle-980;
        }

        .point {
            width: $diameter-point-980;
            height: $diameter-point-980;
        }
    
        @for $i from 0 through $numPoint {
            #point#{$i + 1} {
                & {
                    transform: translate(-50%, -50%) rotate(calc($arcAngle * $i - $shift)) translate(calc($diameter-circle-980 / 2)) rotate(- calc($arcAngle * $i - $shift));
                }
                &:hover {
                    width: calc($diameter-point-980 * $increase-for-current);
                    height: calc($diameter-point-980 * $increase-for-current);
                }
            }
        }
    
        #current {
            transform: translate(-50%, -50%) rotate(- $shift) translate(calc($diameter-circle-980 / 2)) rotate($shift);
            width: calc($diameter-point-980 * $increase-for-current);
            height: calc($diameter-point-980 * $increase-for-current);
        }

        .container-years {
            font-size: $font-size-years-980;
        }
        
        .container-button {
            .arrow {
                width: $diameter-point-980 * $increase-for-current;
                height: $diameter-point-980 * $increase-for-current;
            }
        }
    }

    @media screen and (max-width: 900px) {
        .circle {
            width: $diameter-circle-900;
            height: $diameter-circle-900;
        }

        .point {
            width: $diameter-point-900;
            height: $diameter-point-900;
        }
    
        @for $i from 0 through $numPoint {
            #point#{$i + 1} {
                & {
                    transform: translate(-50%, -50%) rotate(calc($arcAngle * $i - $shift)) translate(calc($diameter-circle-900 / 2)) rotate(- calc($arcAngle * $i - $shift));
                }
                &:hover {
                    width: calc($diameter-point-900 * $increase-for-current);
                    height: calc($diameter-point-900 * $increase-for-current);
                }
            }
        }
    
        #current {
            transform: translate(-50%, -50%) rotate(- $shift) translate(calc($diameter-circle-900 / 2)) rotate($shift);
            width: calc($diameter-point-900 * $increase-for-current);
            height: calc($diameter-point-900 * $increase-for-current);
        }

        .container-years {
            font-size: $font-size-years-900;
        }

        .container-button {
            .arrow {
                width: $diameter-point-900 * $increase-for-current;
                height: $diameter-point-900 * $increase-for-current;
            }
        }
    }

    @media screen and (max-width: 800px) {
        .circle {
            width: $diameter-circle-800;
            height: $diameter-circle-800;
        }

        .point {
            width: $diameter-point-800;
            height: $diameter-point-800;
        }
    
        .point > p {
            transform: translateY(40%) scale(calc(1.2));
        }

        @for $i from 0 through $numPoint {
            #point#{$i + 1} {
                & {
                    transform: translate(-50%, -50%) rotate(calc($arcAngle * $i - $shift)) translate(calc($diameter-circle-800 / 2)) rotate(- calc($arcAngle * $i - $shift));
                }
                &:hover {
                    width: calc($diameter-point-800 * $increase-for-current);
                    height: calc($diameter-point-800 * $increase-for-current);
                }
            }
        }
    
        #current {
            transform: translate(-50%, -50%) rotate(- $shift) translate(calc($diameter-circle-800 / 2)) rotate($shift);
            width: calc($diameter-point-800 * $increase-for-current);
            height: calc($diameter-point-800 * $increase-for-current);

            p {
                transform: translateY(100%) scale(1.2);
            }
        }

        .container-years {
            font-size: $font-size-years-800;
        }

        .container-button {
            .arrow {
                width: $diameter-point-800 * $increase-for-current;
                height: $diameter-point-800 * $increase-for-current;
            }

            .arrow-left {
                &::after {
                    transform: translate(110%, 150%) rotate(45deg);
                }
            }
        
            .arrow-right{
                &::after {
                    transform: translate(110%, 150%) rotate(225deg);
                }
            }
        }
    }

    @media screen and (max-width: 750px) {
        .circle {
            width: $diameter-circle-750;
            height: $diameter-circle-750;
        }

        .point {
            width: $diameter-point-750;
            height: $diameter-point-750;
        }
    
        @for $i from 0 through $numPoint {
            #point#{$i + 1} {
                & {
                    transform: translate(-50%, -50%) rotate(calc($arcAngle * $i - $shift)) translate(calc($diameter-circle-750 / 2)) rotate(- calc($arcAngle * $i - $shift));
                }
                &:hover {
                    width: calc($diameter-point-750 * $increase-for-current);
                    height: calc($diameter-point-750 * $increase-for-current);
                }
            }
        }
    
        #current {
            transform: translate(-50%, -50%) rotate(- $shift) translate(calc($diameter-circle-750 / 2)) rotate($shift);
            width: calc($diameter-point-750 * $increase-for-current);
            height: calc($diameter-point-750 * $increase-for-current);

            p {
                transform: translateY(80%) scale(1.2);
            }
        }

        .container-years {
            font-size: $font-size-years-750;
            .first-year {
                transform: translate(-10%);
            }
    
            .second-year {
                transform: translate(10%);
            }
        }

        .container-button {   
            .arrow {
                width: $diameter-point-750 * $increase-for-current;
                height: $diameter-point-750 * $increase-for-current;
            }

            .arrow-left {
                &::after {
                    transform: translate(80%, 120%) rotate(45deg);
                }
            }
        
            .arrow-right{
                &::after {
                    transform: translate(80%, 120%) rotate(225deg);
                }
            }
        }
    }

    @media screen and (max-width: 650px) {
        .circle {
            width: $diameter-circle-650;
            height: $diameter-circle-650;
        }

        .point {
            width: $diameter-point-650;
            height: $diameter-point-650;
        }
    
        .point > p {
            transform: translateY(35%) scale(calc(1.2));
        }

        @for $i from 0 through $numPoint {
            #point#{$i + 1} {
                & {
                    transform: translate(-50%, -50%) rotate(calc($arcAngle * $i - $shift)) translate(calc($diameter-circle-650 / 2)) rotate(- calc($arcAngle * $i - $shift));
                }
                &:hover {
                    width: calc($diameter-point-650 * $increase-for-current);
                    height: calc($diameter-point-650 * $increase-for-current);
                }
            }
        }
    
        #current {
            transform: translate(-50%, -50%) rotate(- $shift) translate(calc($diameter-circle-650 / 2)) rotate($shift);
            width: calc($diameter-point-650 * $increase-for-current);
            height: calc($diameter-point-650 * $increase-for-current);

            p {
                transform: translateY(70%) scale(1.2);
            }
        }

        .container-years {
            font-size: $font-size-years-650;
            .first-year {
                transform: translate(-10%);
            }
    
            .second-year {
                transform: translate(10%);
            }
        }
        .container-button {
            .arrow {
                width: $diameter-point-650 * $increase-for-current;
                height: $diameter-point-650 * $increase-for-current;
            }

            .arrow-left {
                &::after {
                    transform: translate(80%, 90%) rotate(45deg);
                }
            }
        
            .arrow-right{
                &::after {
                    transform: translate(50%, 90%) rotate(225deg);
                }
            }
        }
    }

    @media screen and (max-width: 500px) {
        .circle {
            width: $diameter-circle-500;
            height: $diameter-circle-500;
        }

        .point {
            width: $diameter-point-500;
            height: $diameter-point-500;
        }
    
        .point > p {
            transform: translateY(35%) scale(calc(1.2));
        }

        .point > p.topic {
            display: none;
        }

        @for $i from 0 through $numPoint {
            #point#{$i + 1} {
                & {
                    transform: translate(-50%, -50%) rotate(calc($arcAngle * $i - $shift)) translate(calc($diameter-circle-500 / 2)) rotate(- calc($arcAngle * $i - $shift));
                }
                &:hover {
                    width: calc($diameter-point-500 * $increase-for-current);
                    height: calc($diameter-point-500 * $increase-for-current);
                }
            }
        }
    
        #current {
            transform: translate(-50%, -50%) rotate(- $shift) translate(calc($diameter-circle-500 / 2)) rotate($shift);
            width: calc($diameter-point-500 * $increase-for-current);
            height: calc($diameter-point-500 * $increase-for-current);

            p {
                transform: translateY(70%) scale(1.2);
            }
            p.topic, p#current-topic {
                display: none;
                /* left: calc($diameter-point * $increase-for-current); */
            }
        }

        .container-years {
            font-size: $font-size-years-500;
            .first-year {
                transform: translate(-10%);
            }
    
            .second-year {
                transform: translate(10%);
            }
        }

        .container-button {
            .arrow {
                width: $diameter-point-500 * $increase-for-current;
                height: $diameter-point-500 * $increase-for-current;
            }
        }
    }

    @media screen and (max-width: 400px) {
        height: 50%;
        .circle {
            display: none;
        }

        .point {
            display: none;
        }
    
        #current {
            display: none;
        }

        .container-years {
            top: 75%;
            font-size: $font-size-years-400;
            .first-year {
                transform: translate(-15%);
            }
    
            .second-year {
                transform: translate(15%);
            }
        }

        p.current-point {
            top: 175%;
        }

        .container-button {    
            top: 185%;        
            .arrow {
                width: $diameter-point-400 * $increase-for-current;
                height: $diameter-point-400 * $increase-for-current;
            }
        }
    }

    @media screen and (max-width: 370px) {
        .container-years {
            top: 75%;
            font-size: $font-size-years-400;
            .first-year {
                transform: translate(-10%);
            }
    
            .second-year {
                transform: translate(10%);
            }
        }
    }

    @media screen and (max-width: 350px) {
        .container-years {
            top: 75%;
            font-size: $font-size-years-400;
            .first-year {
                transform: translate(-5%);
            }
    
            .second-year {
                transform: translate(5%);
            }
        }
    }

    @media screen and (max-width: 320px) {
        .container-years {
            top: 75%;
            font-size: $font-size-years-300;
            .first-year {
                transform: translate(-5%);
            }
    
            .second-year {
                transform: translate(5%);
            }
        }
    }
}

.swiper-container {
    display: flex;
    flex-direction: row;
    align-items: center;
    max-height: 20%;
    height: 20%;
    margin-left: calc($vector-header-width + 6%);
    max-width: calc(100% - 2 * $vector-header-width - 12%);
    width: 100%;
    overflow: hidden;

    .swiper-wrapper {
        max-width: 80%;
        display: flex;
        flex-direction: row;
        align-items: center;
    }

    .swiper-slide{
        width: auto;
        max-width: 40%;
        height: auto;
        display: flex;
        flex-direction: column;
        p {
            width: auto;
            height: auto;
            display: inline-block;
            font-size: 140%;
        }
        .year {
            color: $blue;
            margin-bottom: 2%;
            font-family: 'Bebas Neue';
        }
        .info {
            color: $black-blue;
        }
    }

    .swiper-button-prev,  .swiper-button-next{
        position: absolute;
        top: 90%;
        width: $diameter-point * $increase-for-current / 2;
        height: $diameter-point * $increase-for-current / 2;
        border-radius: 50%;
        cursor: pointer;
        transition: 0.5s;
        background-color: white;
        
    }

    .swiper-button-prev {
        max-width: 10%;
        left: 2%;
        &::after {
            position: absolute;
            top: 8px;;
            left: 9px;
            content: '';
            display: block;
            width: 4px;
            height: 4px;
            border-left: 2px solid $blue;
            border-bottom: 2px solid $blue;
            transform: translate(50%, 50%) rotate(45deg);
        }
    }
    
    .swiper-button-next {
        max-width: 10%;
        right: 2%;
        &::after {
            position: absolute;
            top: 8px;;
            left: 9px;
            content: '';
            display: block;
            width: 4px;
            height: 4px;
            border-left: 2px solid $blue;
            border-bottom: 2px solid $blue;
            transform: translate(30%, 50%) rotate(225deg);
        }
    }

    .swiper-button-disabled {
        display: none;
    }

    @media screen and (max-width: 1100px) {
        .swiper-slide{
            max-width: 50%;
        }
    }

    @media screen and (max-width: 800px) {
        .swiper-slide{
            max-width: 80%;
        }
    }

    @media screen and (max-width: 650px) {
        .swiper-slide{
            max-width: 100%;
        }
    }

    @media screen and (max-width: 400px) {
        max-height: 50%;
        height: auto;
        margin-top: 10%;

        .swiper-button-prev,  .swiper-button-next{
            display: none;
        }

        .swiper-slide{
            .info {
                line-height: 30px;
            }
        }
    }
}
